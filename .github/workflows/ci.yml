# Created following instructions in modularmoose post:
#   https://modularmoose.org/2021/07/19/automatic-metamodel-documentation-generation.html

# Name of the project in the GitHub action panel
name: CI

# Execute the CI on push on the master branch
on:
  push:
    branches: 
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        smalltalk: [ Moose64-10]
    name: $
    steps:
        # checkout the project
      - uses: actions/checkout@v2
      
        # Prepare the CI - download the correct VM
      - uses: hpi-swa/setup-smalltalkCI@v1
        with:
          smalltalk-image: ${{ matrix.smalltalk }}
      
        # Use the CI
      - run: smalltalkci -s ${{ matrix.smalltalk }}
        shell: bash
        timeout-minutes: 15
        

      - name: Build meta-model uml image
        #run: |
        #  $SMALLTALK_CI_VM  $SMALLTALK_CI_IMAGE eval "'cppFullModel.puml' asFileReference writeStreamDo: [ :stream | stream nextPutAll:  (FamixMMUMLDocumentor new withModel: FamixCppModel andColor: Color white ; withModel: CModel andColor: Color lightBlue ; withModel: CPreprocModel andColor: Color lightGreen ; beWithStub; generatePlantUMLModel)]."
        run: |
          $SMALLTALK_CI_VM  $SMALLTALK_CI_IMAGE eval "'cppFullModel.puml' asFileReference writeStreamDo: [ :stream | stream nextPutAll:  (FamixMMUMLDocumentor new withModel: FamixCppModel andColor: Color white; beWithStub; generatePlantUMLModel)]."
      - name: Generate SVG Diagrams
        uses: cloudbees/plantuml-github-action@master
        with:
            args: -v -tsvg cppFullModel.puml

      - name: Move artifact
        run: |
          mkdir doc-uml
          mv *.svg doc-uml/cppFullModel.svg
   
      - name: Init new repo in dist folder and commit generated files
        run: |
          cd doc-uml/
          git init
          git add -A
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m 'update uml diagram'
      
      # Careful, this can kill your project
      - name: Force push to destination branch
        uses: ad-m/github-push-action@master
        with:
          # Token for the repo. Can be passed in using $\{{ secrets.GITHUB_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
          # Destination branch to push changes
          branch: v1/doc
          # We have to push from the folder where files were generated.
          # Same were the new repo was initialized in the previous step
          directory: ./doc-uml
